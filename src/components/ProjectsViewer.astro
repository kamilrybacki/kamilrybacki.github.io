---
import ProjectModal from '@components/ProjectModal.astro';
import ProjectTechs from '@components/ProjectTechs.astro';

interface Props {
  data: any[];
}

const { data } = Astro.props;
const renderedData = await Promise.all(data.map((post) => post.render()));
---
<script>
  const contentStyling = {
    'h2': 'text-3xl font-handwriting mb-1 mt-2',
    'h3': 'text-2xl font-handwriting mb-1 mt-2',
    'h4': 'text-xl font-handwriting mb-1 mt-2',
    'h5': 'text-lg font-handwriting mb-1 mt-2',
    'p': 'font-body text-md py-2',
    'a': 'font-display outline-none font-bold'
  }

  const contentEntries = [...document.getElementsByClassName('project-content')];
  contentEntries.forEach((entry: Element) => {
    Object.entries(contentStyling).forEach(([tag, style]) => {
      const styleClasses = style.split(" ");
        const elements = entry.getElementsByTagName(tag);
        for (let i = 0; i < elements.length; i++) {
          elements[i].classList.add(...styleClasses);
        }
    });
  });

  document.addEventListener('DOMContentLoaded', () => {
    const projectCards = [...document.getElementsByClassName('project-card')];
    projectCards.forEach((entry: Element) => {
      const entryKey = (entry.getAttribute('data-key') || '').replace('-card','-modal');
      const modalElement = document.getElementById(entryKey) as HTMLDialogElement;
      modalElement?.getElementsByTagName('button')[0].addEventListener('click', () => {
        document.getElementById("content")?.classList.remove(...['opacity-25', 'blur']);
        modalElement.close();
      });
      entry.addEventListener('click', () => {
        document.getElementById("content")?.classList.add(...['opacity-25', 'blur']);
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            document.getElementById("content")?.classList.remove(...['opacity-25', 'blur']);
            modalElement.close();
          }
        });
        modalElement.showModal();
      });
    })
  });
</script>

<main class="flex w-full flex-col items-center justify-center gap-4 lg:flex-row lg:gap-10">
  {
    renderedData && renderedData.map((post) => {
      const frontmatter = post.remarkPluginFrontmatter;
      const simpleTitle = frontmatter.title.replace(/\s/g, "").toLowerCase().replace(/[^a-zA-Z0-9 ]/g, '');
      return (
        <>
          <article 
            data-key={`${simpleTitle}-card`} 
            class='project-card doodle-border flex w-[95%] cursor-pointer flex-col flex-wrap items-center justify-center p-2 duration-500 hover:-translate-y-2 lg:w-[40%] lg:p-4'
          >
            <h1 class='mx-auto mb-4 mt-2 text-center font-handwriting text-2xl font-bold lg:mb-7 lg:mt-5 lg:text-5xl'>{frontmatter.title}</h1>
            <ProjectTechs
              techs={frontmatter.techs}
              label=""
            />
            <p class='lg:text-md mt-4 text-justify font-body text-sm lg:mt-8'>{frontmatter.description}</p>
          </article>
          <ProjectModal id={`${simpleTitle}-modal`} open={'See more'}>
            <section class="project-content w-full text-foreground lg:w-auto" slot="main">
              <p class='mx-auto mb-3 mt-2 text-center font-handwriting text-5xl font-bold lg:mb-7 lg:mt-5 lg:text-7xl'>{frontmatter.title}</p>
              <img
                src={`assets/thumbnails/${frontmatter.image}`}
                class="mx-auto my-4 max-h-48 lg:my-8 lg:max-h-96"
              />
              <div class="flex w-full flex-col lg:flex-row lg:items-center">
                <ProjectTechs 
                  techs={frontmatter.techs}
                  label="Tech stack:"
                />
                <div class="flex flex-row items-center justify-center lg:ml-auto">
                  Date:
                  <span class="ml-2 font-body text-sm">{frontmatter.date}</span>
                </div>
              </div>
              <hr class="my-2 w-full lg:my-4"/>
              <post.Content/>
              <nav class="mt-2 flex flex-row justify-between">
                <button
                  slot='close'
                  id={`${simpleTitle}-modal-close`}
                  class="text-md mt-auto h-fit py-1 font-handwriting duration-500 hover:-translate-x-2 lg:px-1 lg:text-xl"
                >
                  Close
                </button>
                <button
                  slot='close'
                  id={`${simpleTitle}-modal-close`}
                  class="mt-auto h-fit px-2 py-1 duration-500 hover:translate-x-2 lg:px-3 lg:py-2"
                >
                  <a href={frontmatter.link} class="font-handwriting text-2xl lg:text-4xl">
                    Check it out
                  </a>
                </button>
              </nav>
            </section>
          </ProjectModal>
        </>
      )
    })
  }
</main>
