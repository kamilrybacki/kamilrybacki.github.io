---
import { Code } from "astro:components";
import StyledSVG from "@components/StyledSVG.astro";

interface CodeLineAnnotation {
  lineNumber: number | number[],
  annotation: string,
  style?: string
}

interface Props {
  code: string,
  language: string,
  filename: string,
  annotations: CodeLineAnnotation[]
}

const {code, language, filename, annotations} = Astro.props;
---
<style>
  .astro-code-content {
    @apply my-4;
    .astro-code-filename {
      @apply text-sm font-bold text-background mx-auto;
      @apply flex flex-row gap-1 items-center w-full;
      @apply mr-auto bg-foreground px-4 py-1 rounded-t-md;
    }
    .astro-code-button {
      @apply w-2 h-2 rounded-full;
      @apply bg-background;
    }
  }
</style>

<script define:vars={{ code, filename }}>
  const copyContent = async (text) => {
    try {
      await navigator.clipboard.writeText(text);
      console.log('Content copied to clipboard');
    } catch (err) {
      console.error('Failed to copy: ', err);
    }
  }
  document.addEventListener('DOMContentLoaded', () => {
    const codeLines = document.querySelectorAll('.astro-code');
    const copyButtons = document.getElementById(`copy-${filename}`);
    copyButtons.addEventListener('click', () => {
      copyContent(
        code
          .split('\n')
          .map((line) => line.slice(4))
          .join('\n')
      );
    });
    codeLines.forEach((el) => {
      el.classList.remove('astro-code');
      el.classList.add(...['rounded-b-md', 'text-sm', 'py-4', 'px-2']);
      const codeLines = el.getElementsByTagName('span');
      let foundLinesIndex = 1;
      [...codeLines].forEach((line) => {
        if (line.classList.contains('line')) {
          line.classList.add('hover:font-bold');
          const lineNumberOpacity = line.innerText.trim() ? 'opacity-25' : 'opacity-10';
          const numberSpan = document.createElement('span');
          numberSpan.classList.add(...['text-glow', lineNumberOpacity]);
          numberSpan.innerText = `${foundLinesIndex.toString().padStart(3, ' ')}`;
          line.insertBefore(
            numberSpan,
            line.firstChild
          );
          foundLinesIndex++;
        }
      });
    });
  });
</script>

<div class="astro-code-content relative">
  <div class="astro-code-filename flex gap-1">
    <div class="astro-code-button"/>
    <div class="astro-code-button"/>
    <span class="mx-auto">{filename}</span>
  </div>
  <Code 
    code={code}
    lang={language}
    theme="github-dark"
  />
  <div
    class="absolute bottom-4 right-4 cursor-pointer font-bold text-glow hover:scale-110"
    id={`copy-${filename}`}
  >
    <StyledSVG
      src="images/copy"
      alt="Copy to clipboard"
      class="h-6 w-6 text-glow"
    />
  </div>
<div>